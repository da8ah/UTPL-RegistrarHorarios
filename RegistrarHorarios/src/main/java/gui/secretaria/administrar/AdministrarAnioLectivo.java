/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.secretaria.administrar;

import Logica.ValidarEntradas;
import clases.AnioLectivo;
import gui.secretaria.VentanaSecretariaAdministrar;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import java.util.Date;
import javax.swing.JOptionPane;
import logica.LogicaAnioLectivo;

/**
 *
 * @author USUARIO
 */
public class AdministrarAnioLectivo extends javax.swing.JFrame {

    private LogicaAnioLectivo objLogicaAnioLectivo = new LogicaAnioLectivo();
    private ArrayList<AnioLectivo> objListadoAniosLectivos;
    private ArrayList<AnioLectivo> mesesAnioLectivo;
    private AnioLectivo objAnioLectivo;
    private boolean agregarActivado;

    /**
     * Creates new form AnioLectivo
     */
    public AdministrarAnioLectivo() {
        initComponents();
        setLocationRelativeTo(null);
        this.entradasIniciales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jBtnListar = new javax.swing.JButton();
        jLFechaInicio = new javax.swing.JLabel();
        jTFFechaFinalizacion = new javax.swing.JTextField();
        jLFechaFinalizacion = new javax.swing.JLabel();
        jLAdministrarAnioLectivo = new javax.swing.JLabel();
        jCBDesdeMes = new javax.swing.JComboBox<>();
        jBtnAgregar = new javax.swing.JButton();
        jCBFechaInicio = new javax.swing.JComboBox<>();
        jTFPeriodo = new javax.swing.JTextField();
        jLDuracionPeriodo = new javax.swing.JLabel();
        jLDesde = new javax.swing.JLabel();
        jBtnEliminar = new javax.swing.JButton();
        jBtnVolver = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jBtnListar.setText("Listar");
        jBtnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnListarActionPerformed(evt);
            }
        });

        jLFechaInicio.setText("Fecha de inicio:");

        jTFFechaFinalizacion.setEditable(false);
        jTFFechaFinalizacion.setText("                         ");
        jTFFechaFinalizacion.setFocusable(false);

        jLFechaFinalizacion.setText("Fecha de finalización:");

        jLAdministrarAnioLectivo.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        jLAdministrarAnioLectivo.setText("ADMINISTRAR AÑO LECTIVO");

        jCBDesdeMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDesdeMesActionPerformed(evt);
            }
        });

        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });

        jCBFechaInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFechaInicioActionPerformed(evt);
            }
        });

        jTFPeriodo.setText("                         ");
        jTFPeriodo.setEnabled(false);

        jLDuracionPeriodo.setText("Duración del Periodo:");

        jLDesde.setText("desde");

        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        jBtnVolver.setText("Volver");
        jBtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFechaFinalizacion)
                    .addComponent(jLFechaInicio)
                    .addComponent(jLDuracionPeriodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLDesde)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBDesdeMes, 0, 158, Short.MAX_VALUE))
                            .addComponent(jTFFechaFinalizacion)
                            .addComponent(jCBFechaInicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLAdministrarAnioLectivo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLAdministrarAnioLectivo)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLFechaInicio)
                    .addComponent(jBtnListar)
                    .addComponent(jCBFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jBtnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBDesdeMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLDuracionPeriodo)
                            .addComponent(jLDesde))))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFFechaFinalizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFechaFinalizacion))
                .addGap(18, 18, 18)
                .addComponent(jBtnVolver)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnListarActionPerformed
        // TODO add your handling code here:
        this.entradasListar();

    }//GEN-LAST:event_jBtnListarActionPerformed

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        // TODO add your handling code here:
        if (!agregarActivado) {

            this.entradasAgregar();
            this.agregarActivado = true;

            // ELIMINAR PARA INGRESO MANUAL
            // SE HABILITA EL SIGUIENTE PERIODO UNA VEZ PASADO
            this.jTFPeriodo.setEditable(false);
            this.jTFPeriodo.setEnabled(false);
            this.jCBDesdeMes.setEditable(false);
            this.jCBDesdeMes.setEnabled(false);

            this.jTFPeriodo.setText("10");
            DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
            this.jCBDesdeMes.removeAllItems();
            comboBoxModel.addElement(null);

            this.objListadoAniosLectivos = new ArrayList<>();
            this.objAnioLectivo = objLogicaAnioLectivo.ultimoAnioLectivo(objAnioLectivo);

            Calendar mesCalendar = Calendar.getInstance();
            mesCalendar.setTime(objAnioLectivo.getFechaInicio());
            mesCalendar.add(Calendar.YEAR, 1);
            objAnioLectivo.setFechaInicio(mesCalendar.getTime());

            comboBoxModel.addElement(objAnioLectivo);
            this.jCBDesdeMes.setModel(comboBoxModel);
            this.jCBDesdeMes.setSelectedItem(objAnioLectivo);
            // ELIMINAR PARA INGRESO MANUAL
        } else {

            if (!this.jTFPeriodo.getText().isEmpty() && this.jCBDesdeMes.getSelectedItem() != null && !this.jLFechaFinalizacion.getText().isEmpty() && objAnioLectivo != null) {

                if (!registroDuplicado()) {

                    if (objLogicaAnioLectivo.insertarAnioLectivo(objAnioLectivo)) {
                        JOptionPane.showMessageDialog(null, "Agregado Correctamente");
                        this.entradasIniciales();
                    } else {
                        JOptionPane.showMessageDialog(null, "¡Fallo al Guardar!", "Error en BD", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "¡Registro Duplicado!", "Duplicado", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "¡Complete la Información!", "Información", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        // TODO add your handling code here:
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Eliminar Permanentemente?", "¡Advertencia!", JOptionPane.ERROR_MESSAGE);
        if (confirmacion == JOptionPane.YES_OPTION) {

            this.objAnioLectivo = (AnioLectivo) this.jCBFechaInicio.getSelectedItem();
            if (objAnioLectivo != null && objLogicaAnioLectivo.eliminarAnioLectivo(objAnioLectivo)) {
                JOptionPane.showMessageDialog(null, "Eliminado Correctamente");
                this.entradasIniciales();
            } else {
                JOptionPane.showMessageDialog(null, "¡Fallo al Guardar!", "Error en BD", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jBtnEliminarActionPerformed

    private void jBtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVolverActionPerformed
        // TODO add your handling code here:
        VentanaSecretariaAdministrar ventanaRegistrar = new VentanaSecretariaAdministrar();
        ventanaRegistrar.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jBtnVolverActionPerformed

    private void jCBFechaInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFechaInicioActionPerformed
        // TODO add your handling code here
        this.objAnioLectivo = (AnioLectivo) this.jCBFechaInicio.getSelectedItem();

        if (objAnioLectivo != null) {
            // FECHA        
            this.jTFFechaFinalizacion.setText(imprimirFecha(objAnioLectivo.getFechaFinal(), "MMMM yyyy"));
            this.jBtnEliminar.setEnabled(true);
            this.entradasEliminar();
        } else {
            this.entradasListar();
            this.jBtnEliminar.setEnabled(false);
        }

    }//GEN-LAST:event_jCBFechaInicioActionPerformed

    private void jCBDesdeMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDesdeMesActionPerformed
        // TODO add your handling code here:
        if (this.jTFPeriodo.getText() != null && this.jCBDesdeMes.getSelectedItem() != null) {

            if (this.validarEntradasAnioLectivo()) {

                // FECHA INICIO
                this.objAnioLectivo = (AnioLectivo) this.jCBDesdeMes.getSelectedItem();
                int periodo = Integer.parseInt(this.jTFPeriodo.getText());
                if (periodo > 0 && periodo < 11) {

                    this.establecerFechaFinal(periodo);

                } else {
                    JOptionPane.showMessageDialog(null, "¡Periodo no Válido!", "Periodo", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un Periodo\ndesde 1 a 10 meses", "Periodo", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jCBDesdeMesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarAnioLectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarAnioLectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarAnioLectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarAnioLectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarAnioLectivo().setVisible(true);
            }
        });
    }

    // FUNCIONES PARA EL OBJETO MANIPULADO
    private boolean buscarAnioLectivo() {
        this.objAnioLectivo = objLogicaAnioLectivo.buscarAnioLectivo(objAnioLectivo);
        return this.objAnioLectivo.getIdAnioLectivo() != 0; // return [true] si encuentra el objeto;
    }

    private boolean registroDuplicado() {
        AnioLectivo objAux = new AnioLectivo(objAnioLectivo.getIdAnioLectivo(),
                objAnioLectivo.getFechaInicio(),
                objAnioLectivo.getFechaFinal());
        boolean repetida = this.buscarAnioLectivo();
        this.objAnioLectivo = objAux;
        return repetida; // return [true] si el registro ya existe;
    }

    private void establecerFechaFinal(int periodo) {
        Calendar fechaFinal = Calendar.getInstance();
        fechaFinal.setTime(objAnioLectivo.getFechaInicio());
        fechaFinal.add(Calendar.MONTH, periodo);
        this.objAnioLectivo.setFechaFinal((Date) fechaFinal.getTime());
        this.jTFFechaFinalizacion.setText(imprimirFecha(objAnioLectivo.getFechaFinal(), "MMMM yyyy"));
    }

    private void listarAnioLectivo() {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        this.objListadoAniosLectivos = new ArrayList<>();

        comboBoxModel.addElement(null);

        this.objListadoAniosLectivos = objLogicaAnioLectivo.cargarAniosLectivos(objListadoAniosLectivos);
        this.objListadoAniosLectivos.forEach((anioLectivo) -> {
            comboBoxModel.addElement(anioLectivo);
        });

        this.jCBFechaInicio.setModel(comboBoxModel);
    }

    private void listarCBMesDesde() {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        this.mesesAnioLectivo = new ArrayList<>();

        comboBoxModel.addElement(null);

        Calendar fechaActual = Calendar.getInstance();
        int mesDePartida = Integer.parseInt(imprimirFecha(fechaActual.getTime(), "MM"));
        int addMeses = 0;
        int mesesConteo = mesDePartida + (12 - mesDePartida);
        for (int i = mesDePartida; i <= mesesConteo; i++) {
            Calendar mesCargado = Calendar.getInstance();
            mesCargado.set(Calendar.DATE, 1);
            mesCargado.add(Calendar.MONTH, addMeses);
            AnioLectivo nuevo = new AnioLectivo();
            nuevo.setFechaInicio(mesCargado.getTime());
            mesesAnioLectivo.add(nuevo);
            addMeses++;
        }

        mesesAnioLectivo.forEach((mesAnioLectivo) -> {
            comboBoxModel.addElement(mesAnioLectivo);
        });

        this.jCBDesdeMes.setModel(comboBoxModel);
    }

    private String imprimirFecha(Date fecha, String formato) {
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        String fechaConsistente = dateFormat.format(fecha);
        return fechaConsistente.toUpperCase();
    }

    // OPCIONES DESPLEGADAS POR EVENTO PARA LA PANTALLA
    private void entradasVaciar() {
        this.jCBFechaInicio.addItem(null);
        this.jCBFechaInicio.setSelectedIndex(0);
        this.jCBDesdeMes.addItem(null);
        this.jCBDesdeMes.setSelectedIndex(0);

        this.jTFPeriodo.setText(null);
        this.jTFFechaFinalizacion.setText(null);
    }

    private void entradasIniciales() {
        this.entradasVaciar();
        this.agregarActivado = false;

        this.jCBFechaInicio.setEnabled(false);
        this.jCBDesdeMes.setEnabled(false);
        this.jTFPeriodo.setEnabled(false);

        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasListar() {
        this.entradasVaciar();
        this.listarAnioLectivo();
        this.agregarActivado = false;

        this.jCBFechaInicio.setEnabled(true);
        this.jCBDesdeMes.setEnabled(false);
        this.jTFPeriodo.setEnabled(false);

        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasAgregar() {
        this.entradasVaciar();
        this.listarCBMesDesde();

        this.jCBFechaInicio.setEnabled(false);
        this.jCBDesdeMes.setEnabled(true);
        this.jTFPeriodo.setEnabled(true);

        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasEliminar() {
        this.jCBFechaInicio.setEnabled(true);
        this.jCBDesdeMes.setEnabled(false);
        this.jTFPeriodo.setEnabled(false);
    }

    // CONTROL DEL INGRESO DE DATOS CONSISTENTES
    private boolean validarEntradasAnioLectivo() {
        ValidarEntradas objValidarEntradas = new ValidarEntradas();
        boolean correcto = false;
        if (objValidarEntradas.validarPeriodo(this.jTFPeriodo.getText())) {
            correcto = true;
        }
        return correcto;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnListar;
    private javax.swing.JButton jBtnVolver;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCBDesdeMes;
    private javax.swing.JComboBox<String> jCBFechaInicio;
    private javax.swing.JLabel jLAdministrarAnioLectivo;
    private javax.swing.JLabel jLDesde;
    private javax.swing.JLabel jLDuracionPeriodo;
    private javax.swing.JLabel jLFechaFinalizacion;
    private javax.swing.JLabel jLFechaInicio;
    private javax.swing.JTextField jTFFechaFinalizacion;
    private javax.swing.JTextField jTFPeriodo;
    // End of variables declaration//GEN-END:variables
}
