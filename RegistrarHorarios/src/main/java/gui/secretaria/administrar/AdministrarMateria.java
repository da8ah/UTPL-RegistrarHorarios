/*
 * Programación Avanzada: Programación por Capas.
 */
package gui.secretaria.administrar;

import Logica.ValidarEntradas;
import clases.Materia;
import gui.secretaria.VentanaSecretariaAdministrar;
import javax.swing.JOptionPane;
import logica.LogicaMateria;

/**
 *
 * @author Danilo Alejandro Ochoa Hidalgo
 */
public class AdministrarMateria extends javax.swing.JFrame {

    private LogicaMateria objLogicaMateria = new LogicaMateria();
    private Materia objMateria = new Materia();
    private boolean encontrado;
    private boolean modificarActivado;

    /**
     * Creates new form Docente
     */
    public AdministrarMateria() {
        initComponents();
        setLocationRelativeTo(null);
        this.entradasIniciales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLAdministrarMateria = new javax.swing.JLabel();
        jLCodigo = new javax.swing.JLabel();
        jLNombre = new javax.swing.JLabel();
        jLArea = new javax.swing.JLabel();
        jTFCodigo = new javax.swing.JTextField();
        jTFNombre = new javax.swing.JTextField();
        jTFArea = new javax.swing.JTextField();
        jBtnVolver = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jBtnModificar = new javax.swing.JButton();
        jBtnAgregar = new javax.swing.JButton();
        jBtnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLAdministrarMateria.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        jLAdministrarMateria.setText("ADMINISTRAR MATERIA");

        jLCodigo.setText("Código");

        jLNombre.setText("Nombre");

        jLArea.setText("Área");

        jBtnVolver.setText("Volver");
        jBtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVolverActionPerformed(evt);
            }
        });

        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        jBtnModificar.setText("Modificar");
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });

        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });

        jBtnBuscar.setText("Buscar");
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLCodigo)
                    .addComponent(jLArea)
                    .addComponent(jLNombre))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTFNombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFArea, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLAdministrarMateria))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jBtnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLAdministrarMateria)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnBuscar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnModificar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLNombre))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBtnEliminar)
                                .addComponent(jTFArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLArea)))
                    .addComponent(jLCodigo))
                .addGap(18, 18, 18)
                .addComponent(jBtnVolver)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarActionPerformed
        // TODO add your handling code here:
        if (!encontrado) { // Flujo Normal
            if (!buscarMateria()) {
                this.entradasAgregar();
            } else {
                this.entradasEncontrado();
            }
        } else { // Flujo Alterno
            this.entradasIniciales();
        }

    }//GEN-LAST:event_jBtnBuscarActionPerformed

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        // TODO add your handling code here:
        if (!buscarMateria()) { // Flujo Normal

            if (this.validarEntradasMateria()) {

                if (objLogicaMateria.insertarMateria(objMateria)) {
                    JOptionPane.showMessageDialog(null, "Agregado Correctamente");
                    this.entradasIniciales();
                } else {
                    JOptionPane.showMessageDialog(null, "¡Fallo al Guardar!", "Error en BD", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "¡Formato de Datos no Consistente!", "Información Personal", JOptionPane.ERROR_MESSAGE);
            }

        } else { // Flujo Alterno

            JOptionPane.showMessageDialog(null, "¡Ya Registrado!\nCódigo: " + objMateria.getCodigo() + "\nNombre: " + objMateria.getNombre() + "\nÁrea: " + objMateria.getArea(), "Duplicado", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed
        // TODO add your handling code here:
        if (!this.modificarActivado) {

            this.entradasModificar();

        } else {

            if (!compararMateria()) {

                if (!registroDuplicado()) {

                    if (this.validarEntradasMateria()) {

                        if (objLogicaMateria.actualizarMateria(objMateria)) {
                            JOptionPane.showMessageDialog(null, "Actualizado Correctamente");
                            this.entradasIniciales();
                        } else {
                            JOptionPane.showMessageDialog(null, "¡Fallo al Guardar!", "Error en BD", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "¡Formato de Datos no Consistente!", "Información Personal", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "¡Código ya Registrado!", "Duplicado", JOptionPane.ERROR_MESSAGE);
                }

            } else { // Flujo Alterno

                JOptionPane.showMessageDialog(null, "Sin Cambios");

            }

        }

    }//GEN-LAST:event_jBtnModificarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        // TODO add your handling code here:
        if (buscarMateria()) { // Flujo Normal

            this.entradasEliminar();

            if (!this.jTFCodigo.isEnabled()) {

                int confirmacion = JOptionPane.showConfirmDialog(null, "¿Eliminar Permanentemente?", "¡Advertencia!", JOptionPane.ERROR_MESSAGE);
                if (confirmacion == JOptionPane.YES_OPTION) {

                    if (objLogicaMateria.eliminarMateria(objMateria)) {
                        JOptionPane.showMessageDialog(null, "Eliminado Correctamente");
                        this.entradasIniciales();
                    } else {
                        JOptionPane.showMessageDialog(null, "¡Fallo al Guardar!", "Error en BD", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    this.entradasEncontrado();
                }

            } else {
                JOptionPane.showMessageDialog(null, "¡No Encontrado!", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else { // Flujo Alterno

            JOptionPane.showMessageDialog(null, "¡No Encontrado!", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_jBtnEliminarActionPerformed

    private void jBtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVolverActionPerformed
        // TODO add your handling code here:
        VentanaSecretariaAdministrar ventanaRegistrar = new VentanaSecretariaAdministrar();
        ventanaRegistrar.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jBtnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarMateria().setVisible(true);
            }
        });
    }

    // FUNCIONES PARA EL OBJETO MANIPULADO
    private boolean buscarMateria() {
        this.objMateria.setCodigo(this.jTFCodigo.getText());
        this.objMateria = objLogicaMateria.buscarMateria(objMateria);
        return this.objMateria.getCodigo() != null; // return [true] si encuentra el objeto;
    }

    private boolean compararMateria() {
        Materia objAux = new Materia(objMateria.getIdMateria(),
                objMateria.getCodigo(),
                objMateria.getNombre(),
                objMateria.getArea());

        objAux.setCodigo(this.jTFCodigo.getText());
        objAux.setNombre(this.jTFNombre.getText());
        objAux.setArea(this.jTFArea.getText());

        return objMateria.getCodigo().equals(objAux.getCodigo())
                && objMateria.getNombre().equals(objAux.getNombre())
                && objMateria.getArea().equals(objAux.getArea()); // return [true] si son iguales;
    }

    private boolean registroDuplicado() {
        Materia objAux = new Materia(objMateria.getIdMateria(),
                objMateria.getCodigo(),
                objMateria.getNombre(),
                objMateria.getArea());
        boolean repetida = !this.jTFCodigo.getText().equals(objMateria.getCodigo()) && this.buscarMateria();
        this.objMateria = objAux;
        return repetida; // return [true] si el registro ya existe;
    }

    private boolean validarEntradasMateria() {
        if (this.validarEntradas()) {
            this.objMateria.setCodigo(this.jTFCodigo.getText());
            this.objMateria.setNombre(this.jTFNombre.getText());
            this.objMateria.setArea(this.jTFArea.getText());
            return true;
        } else {
            return false;
        }
    }

    private void presentarMateria() {
        this.jTFCodigo.setText(this.objMateria.getCodigo());
        this.jTFNombre.setText(this.objMateria.getNombre());
        this.jTFArea.setText(this.objMateria.getArea());
    }

    // OPCIONES DESPLEGADAS POR EVENTO PARA LA PANTALLA
    private void entradasVaciar() {
        this.jTFCodigo.setText(null);
        this.jTFNombre.setText(null);
        this.jTFArea.setText(null);
    }

    private void entradasIniciales() {
        this.entradasVaciar();
        this.encontrado = false;

        this.jTFCodigo.setEnabled(true);
        this.jTFNombre.setEnabled(false);
        this.jTFArea.setEnabled(false);

        this.jBtnAgregar.setEnabled(false);
        this.jBtnModificar.setEnabled(false);
        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasEncontrado() {
        this.presentarMateria();
        this.encontrado = true;
        this.modificarActivado = false;

        this.jTFCodigo.setEnabled(false);
        this.jTFNombre.setEnabled(false);
        this.jTFArea.setEnabled(false);

        this.jBtnAgregar.setEnabled(false);
        this.jBtnModificar.setEnabled(true);
        this.jBtnEliminar.setEnabled(true);
    }

    private void entradasAgregar() {
        this.jTFCodigo.setEnabled(true);
        this.jTFNombre.setEnabled(true);
        this.jTFArea.setEnabled(true);

        this.jBtnAgregar.setEnabled(true);
        this.jBtnModificar.setEnabled(false);
        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasModificar() {
        this.encontrado = false; // Se desactiva para buscar un objeto en caso de duplicado
        this.modificarActivado = true;

        this.jTFCodigo.setEnabled(true);
        this.jTFNombre.setEnabled(true);
        this.jTFArea.setEnabled(true);

        this.jBtnAgregar.setEnabled(false);
        this.jBtnModificar.setEnabled(true);
        this.jBtnEliminar.setEnabled(false);
    }

    private void entradasEliminar() {
        this.jTFCodigo.setEnabled(false);
        this.jTFNombre.setEnabled(false);
        this.jTFArea.setEnabled(false);

        this.jBtnAgregar.setEnabled(false);
        this.jBtnModificar.setEnabled(false);
        this.jBtnEliminar.setEnabled(true);
    }

    // CONTROL DEL INGRESO DE DATOS CONSISTENTES
    private boolean validarEntradas() {
        ValidarEntradas objValidarEntradas = new ValidarEntradas();
        boolean correcto = false;
        if (objValidarEntradas.validarCodigos(this.jTFCodigo.getText())) {
            if (objValidarEntradas.validarMateriasAreas(this.jTFNombre.getText())) {
                if (objValidarEntradas.validarMateriasAreas(this.jTFArea.getText())) {
                    correcto = true;
                }
            }
        }
        return correcto;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnBuscar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JButton jBtnVolver;
    private javax.swing.JLabel jLAdministrarMateria;
    private javax.swing.JLabel jLArea;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JTextField jTFArea;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFNombre;
    // End of variables declaration//GEN-END:variables
}
